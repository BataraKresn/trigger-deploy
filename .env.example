# =================================
# Trigger Deploy Server Configuration
# =================================

# Security Tokens (Keep these secure!)
DEPLOY_TOKEN=SATindonesia2026                    # For CI/CD and deployment operations
LOGIN_PASSWORD=admin123                          # For web interface login (different from deploy token)
JWT_SECRET=<jwt_secret>            # For JWT token signing (optional)

# PostgreSQL Database Configuration
POSTGRES_DB=trigger_deploy
POSTGRES_USER=trigger_deploy_user
POSTGRES_PASSWORD=secure_password_123
POSTGRES_HOST=localhost
POSTGRES_PORT=5432

# Database URL (OPTIONAL - will be auto-generated from above components if not set)
# Uncomment and modify if you want to override the auto-generated URL
# DATABASE_URL=postgresql://trigger_deploy_user:secure_password_123@localhost:5432/trigger_deploy

# Logging Configuration
LOG_DIR=trigger-logs
LOG_RETENTION_DAYS=7
MAX_LOG_SIZE=10485760

# Server Configuration
SERVERS_FILE=config/servers.json
SERVICES_FILE=config/services.json

# Rate Limiting
RATE_LIMIT_REQUESTS=10
RATE_LIMIT_WINDOW=60

# Email Notifications  
EMAIL_ENABLED=enable
SMTP_SERVER=smtp.gmail.com
SMTP_PORT=587
SMTP_USERNAME=sysadmin.app@sateknologi.id
SMTP_PASSWORD=kaor vhcx benv ljec
EMAIL_FROM=trigger-deploy@localhost
EMAIL_SUBJECT=Trigger Deploy Notification
EMAIL_BODY=Deployment triggered successfully.
EMAIL_TO=adimaspangestu02@gmail.com

# Telegram Notifications
TELEGRAM_BOT_TOKEN=<telegram_bot_token>
TELEGRAM_CHAT_ID=<telegram_chat_id>
TELEGRAM_ENABLED=enable

# Service Monitoring
MONITORING_ENABLED=true
MONITORING_INTERVAL=60
HEALTH_CHECK_TIMEOUT=30
ALERT_COOLDOWN=300

# Flask Configuration
FLASK_ENV=production

# =================================
# AUTHENTICATION METHODS EXPLANATION
# =================================
# 
# Method 1: Web Interface Login
# - URL: http://localhost:5000/login
# - Username: admin (or any username)  
# - Password: admin123 (value of LOGIN_PASSWORD above)
# - Use: For accessing the web dashboard
#
# Method 2: Quick Login with Deploy Token  
# - URL: http://localhost:5000/login (Quick Access section)
# - Token: SATindonesia2026 (value of DEPLOY_TOKEN above)
# - Use: For quick access using deployment credentials
#
# Method 3: API Access
# - Headers: Authorization: Bearer SATindonesia2026
# - Use: For CI/CD pipelines and automated deployments
#
# =================================
# DEMO CREDENTIALS FOR TESTING
# =================================
# 
# ðŸ§ª Web Login Demo:
#    Username: admin
#    Password: admin123
#
# ðŸ§ª Quick Token Demo:
#    Deploy Token: SATindonesia2026
#
# ðŸ§ª API Demo:
#    curl -H "Authorization: Bearer SATindonesia2026" http://localhost:5000/api/stats
#
# =================================
# SECURITY NOTES
# =================================
# 
# âœ… DEPLOY_TOKEN: Used for deployment operations and API access
# âœ… LOGIN_PASSWORD: Used for web interface authentication
# âœ… JWT_SECRET: Used for session token security
# 
# ðŸ”’ These are THREE DIFFERENT credentials for different purposes
# ðŸ”’ Keep all values secure and never commit to version control
# ðŸ”’ Use strong, unique values for production environments
#
# =================================
# DEVELOPMENT SETTINGS
# =================================
# 
# Production mode is recommended for all deployments
# Demo credentials can be shown/hidden independently from Flask environment
FLASK_ENV=production
FLASK_DEBUG=false

# Demo Credentials Display Control
# Set to 'true' to show demo credentials on login page (useful for testing)
# Set to 'false' to hide demo credentials (recommended for production)
SHOW_DEMO_CREDENTIALS=true
