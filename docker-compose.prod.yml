version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    build:
      context: ./database
      dockerfile: Dockerfile
    image: deploy-postgres
    container_name: deploy-postgres-prod
    restart: unless-stopped
    environment:
      POSTGRES_USER: deployuser
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-strongpassword}
      POSTGRES_DB: deploydb
      POSTGRES_INITDB_ARGS: "--encoding=UTF-8 --lc-collate=C --lc-ctype=C"
    volumes:
      - pgdata_prod:/var/lib/postgresql/data
      - ./database/init.sql:/docker-entrypoint-initdb.d/init.sql:ro
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U deployuser -d deploydb"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - deploy-network

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    image: deploy-backend-prod
    container_name: deploy-backend-prod
    ports:
      - "5002:5001"
    volumes:
      - ./backend/logs:/app/logs
    env_file:
      - ./backend/.env.production
    environment:
      - PYTHONUNBUFFERED=1
      - DATABASE_URL=postgresql+psycopg2://deployuser:${POSTGRES_PASSWORD:-strongpassword}@postgres:5432/deploydb
    depends_on:
      postgres:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5001/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - deploy-network
    restart: always

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    image: deploy-frontend-prod
    container_name: deploy-frontend-prod
    ports:
      - "3111:8082"
    env_file:
      - ./frontend/.env.production
    environment:
      - NODE_ENV=production
      - VITE_API_BASE_URL=http://localhost:5002
    depends_on:
      backend:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8082"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - deploy-network
    restart: always

volumes:
  pgdata_prod:
    driver: local

networks:
  deploy-network:
    name: deploy-network
    driver: bridge
